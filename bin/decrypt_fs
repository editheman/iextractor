#!/bin/bash

source common

if test $# -ne 1 -a $# -ne 2; then
    usage "Usage: $0 disk-image [rootfs-key]"
    usage ""
    usage "Arguments are disk-image file (.dmg) and (optional) root filesystem in case the image file is encrypted."
    exit 1
fi

dmg="$1"
rootfs_key="$2"
dir=$(dirname "$dmg")
decrypted="$dir"/decrypted.dmg
img="$dir"/rootfs.img

if test -z "$rootfs_key"; then
    debug "No rootfs key provided. Assuming none is required and not decrypting disk image."
    debug "Creating a hardlink from dmg file $dmg to $decrypted ..."
    debug "ln -f $dmg $decrypted"
    ln -f "$dmg" "$decrypted" > /dev/null 2>&1
    warn_if_error
else

    echo "" > "$decrypted"

    dmg_absolute=$(readlink -f "$dmg")
    decrypted_absolute=$(readlink -f "$decrypted")

    docker run -v "$dmg_absolute":/in -v "$decrypted_absolute":/out -t vfdecrypt:latest -k$rootfs_key /in /out > /dev/null 2>&1

    
    warn_if_error
fi

if [[ $OSTYPE == darwin* ]]; then
    info "macOS is able to attach and mount .dmg files. Not converting $decrypted to $img"
    exit 0
fi

part_num=$(dmg2img -l "$decrypted" | grep "disk image" | awk '{print $2}' | head -c 2)
debug "Extracting partition $part_num in dmg file $decrypted to filesystem image file $img ..."
debug "dmg2img -p $part_num -i $decrypted -o $img"
dmg2img -p "$part_num" -i "$decrypted" -o "$img" > /dev/null 2>&1
warn_if_error
